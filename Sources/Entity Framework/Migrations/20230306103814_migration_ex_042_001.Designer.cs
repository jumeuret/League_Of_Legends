// <auto-generated />
using System;
using Entity_Framework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230306103814_migration_ex_042_001")]
    partial class migrationex042001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("EntityFramework.CharacteristicsEntity", b =>
                {
                    b.Property<string>("nom")
                        .HasColumnType("TEXT");

                    b.Property<int>("niveau")
                        .HasColumnType("INTEGER");

                    b.HasKey("nom");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("EntityFramework.Migrations.SkinEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChampionEntityChampionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ChampionEntityChampionId");

                    b.ToTable("Skins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChampionId = 2,
                            Description = "truc",
                            Name = "gg",
                            Price = 11.5f
                        },
                        new
                        {
                            Id = 2,
                            ChampionId = 2,
                            Description = "truc",
                            Name = "hh",
                            Price = 11.5f
                        },
                        new
                        {
                            Id = 3,
                            ChampionId = 2,
                            Description = "truc",
                            Name = "ii",
                            Price = 11.5f
                        },
                        new
                        {
                            Id = 4,
                            ChampionId = 1,
                            Description = "truc",
                            Name = "jj",
                            Price = 11.5f
                        },
                        new
                        {
                            Id = 5,
                            ChampionId = 1,
                            Description = "truc",
                            Name = "ll",
                            Price = 11.5f
                        });
                });

            modelBuilder.Entity("Entity_Framework.ChampionEntity", b =>
                {
                    b.Property<int>("ChampionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChampionId");

                    b.ToTable("Champions");

                    b.HasData(
                        new
                        {
                            ChampionId = 1,
                            Bio = "gg",
                            Icon = "ff",
                            Name = "Akali"
                        },
                        new
                        {
                            ChampionId = 3,
                            Bio = "gg",
                            Icon = "gg",
                            Name = "Aatrox"
                        },
                        new
                        {
                            ChampionId = 4,
                            Bio = "gg",
                            Icon = "ff",
                            Name = "Ahri"
                        },
                        new
                        {
                            ChampionId = 5,
                            Bio = "gg",
                            Icon = "ff",
                            Name = "Akshan"
                        },
                        new
                        {
                            ChampionId = 2,
                            Bio = "gg",
                            Icon = "ff",
                            Name = "Bard"
                        },
                        new
                        {
                            ChampionId = 6,
                            Bio = "gg",
                            Icon = "ff",
                            Name = "Alistar"
                        });
                });

            modelBuilder.Entity("Entity_Framework.RuneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RunePageEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RunePageEntityId");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("Entity_Framework.RunePageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunePages");
                });

            modelBuilder.Entity("Entity_Framework.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EntityFramework.Migrations.SkinEntity", b =>
                {
                    b.HasOne("Entity_Framework.ChampionEntity", null)
                        .WithMany("Skins")
                        .HasForeignKey("ChampionEntityChampionId");
                });

            modelBuilder.Entity("Entity_Framework.RuneEntity", b =>
                {
                    b.HasOne("Entity_Framework.RunePageEntity", null)
                        .WithMany("Runes")
                        .HasForeignKey("RunePageEntityId");
                });

            modelBuilder.Entity("Entity_Framework.ChampionEntity", b =>
                {
                    b.Navigation("Skins");
                });

            modelBuilder.Entity("Entity_Framework.RunePageEntity", b =>
                {
                    b.Navigation("Runes");
                });
#pragma warning restore 612, 618
        }
    }
}
